From 26b6a92aebe2894c637d74d5f6a9cc17bfcb0e2f Mon Sep 17 00:00:00 2001
From: Zhaoliang Ma <zhaoliang.ma@intel.com>
Date: Fri, 19 May 2023 14:14:41 +0800
Subject: [PATCH] Handle odd dimensions for external non-compressible surfaces
 on MTL

This is based on commit 25a68cb146b6e5310c6b5e1bd202d5e9690635a9 [1].
It extends the logic for external non-compressible surfaces on MTL.

[1] https://github.com/intel/media-driver/commit/25a68cb146b6e5310c6b5e1bd202d5e9690635a9
---
 .../linux/common/ddi/media_libva_util_next.cpp    | 15 ++++++++++++++-
 1 file changed, 14 insertions(+), 1 deletion(-)

diff --git a/media_softlet/linux/common/ddi/media_libva_util_next.cpp b/media_softlet/linux/common/ddi/media_libva_util_next.cpp
index 1fc9e5f6a77c..42d2b85fe44a 100644
--- a/media_softlet/linux/common/ddi/media_libva_util_next.cpp
+++ b/media_softlet/linux/common/ddi/media_libva_util_next.cpp
@@ -306,7 +306,20 @@ VAStatus MediaLibvaUtilNext::GenerateGmmParamsForNoneCompressionExternalSurface(
     MosUtilities::MosZeroMemory(&gmmCustomParams, sizeof(gmmCustomParams));
     gmmCustomParams.Type          = RESOURCE_2D;
     gmmCustomParams.Format        = ConvertMediaFmtToGmmFmt(params.format);
-    gmmCustomParams.BaseWidth64   = params.width;
+    if ((params.format == Media_Format_YV12) || \
+        (params.format == Media_Format_I420) || \
+        (params.format == Media_Format_IYUV) || \
+        (params.format == Media_Format_NV12) || \
+        (params.format == Media_Format_P010) || \
+        (params.format == Media_Format_P012) || \
+        (params.format == Media_Format_P016) || \
+        (params.format == Media_Format_NV21)) {
+        // Align width to 2 for specific planar formats to handle
+        // odd dimensions for external non-compressible surfaces
+        gmmCustomParams.BaseWidth64 = MOS_ALIGN_CEIL(params.width, 2);
+    } else {
+        gmmCustomParams.BaseWidth64 = params.width;
+    }
     gmmCustomParams.BaseHeight    = baseHeight;
     gmmCustomParams.Pitch         = params.pitch;
     gmmCustomParams.Size          = mediaSurface->pSurfDesc->uiSize;
-- 
2.17.1

